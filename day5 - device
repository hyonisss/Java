<DuplicatedIdException.java>
package edu.scsa.day5.device;

public class DuplicatedIdException extends Exception {

	public DuplicatedIdException() {
		super("중복된 모델 입니다.. 다른 모델명으로 등록해 주세요..");
	}

}
=====================================================================================

<ModelNotFoundException.java>

package edu.scsa.day5.device;

public class ModelNotFoundException extends Exception {
	public ModelNotFoundException() {
		super("해당 모델이 없습니다...");
	}
}
=====================================================================================

<DeviceNewManager.java>
package edu.scsa.day5.device;
/*
 * IDevice implements 받아 구현
 * 데이터 저장 : ArrayList
 * 싱글턴...
 * 
 */
import java.util.*;

public class DeviceNewManager implements IDevice{
	List<Device> arrList = new ArrayList<Device>();
	private static DeviceNewManager devNewMgr = new DeviceNewManager();
	private int index = 0;
	private DeviceNewManager() {
		
	}
	public static DeviceNewManager getInstance() {
		return devNewMgr;
	}

	@Override
	public void addDevice(Device dev) throws DuplicatedIdException{
		// TODO Auto-generated method stub
		for (Device device : arrList) {
			if(device.getModel().equals(dev.getModel())) {
				throw new DuplicatedIdException();
			}
		}
		arrList.add(dev);
	}

	@Override
	public Device[] getAllDevice() {
		// TODO Auto-generated method stub
		Device[] devArr = new Device[arrList.size()];
		arrList.toArray(devArr);
		return devArr;
	}

	@Override
	public Device getDevice(String mod) {
		// TODO Auto-generated method stub
		for (Device device : arrList) {
			if(device.getModel().equals(mod)) return device;
		}
		return null;
	}

	@Override
	public void deleteDevice(String mod) throws ModelNotFoundException{
		// TODO Auto-generated method stub
		Device dev = getDevice(mod);
		if(dev!=null) {
			arrList.remove(dev);
			return;
		}
		throw new ModelNotFoundException();
	}

	@Override
	public void updateDevice(Device dev) throws ModelNotFoundException {
		// TODO Auto-generated method stub
		Device device = getDevice(dev.getModel());
		if(device != null) {
			device.setPrice(dev.getPrice());
			device.setSize(dev.getSize());
			return;
		}
		throw new ModelNotFoundException();
	}

}

=====================================================================================

<DeviceNewTest.java>

package edu.scsa.day5.device;

import java.util.*;

public class DeviceNewTest {

	public static void main(String[] args) {
		String model, category, installType;
		int price, ram, res;
		Device ret;
		double size;

		// TODO Auto-generated method stub
		DeviceNewManager newmgr = DeviceNewManager.getInstance();
		System.out.println("Menu");
		System.out.println("1. 장비 추가");
		System.out.println("2. 전체 장비 정보 조회");
		System.out.println("3. 특정 장비 정보 조회");
		System.out.println("4. 장비 삭제");
		System.out.println("Q. 프로그램 종료");
		Scanner sc = new Scanner(System.in);
		while(true)
		{
			System.out.println("메뉴를 선택하세요");
			String menu = sc.next();
			if(menu.equals("1")) {
				System.out.println("추가할 장비 정보를 입력하세요");
				category = sc.next();
				System.out.println("모델?"); model = sc.next();
				System.out.println("사이즈?"); size = sc.nextDouble();	
				System.out.println("가격?"); price = sc.nextInt();
				if(category.equals("SP")) {
					//	public SmartPhone(String model, double size, String category, int price, int ram)
					System.out.println("ram?"); ram = sc.nextInt();
					Device newdev = new SmartPhone(model, size, category, price, ram);
					try {
						newmgr.addDevice(newdev);
					} catch(DuplicatedIdException e) {
						System.out.println(e.getMessage());
					}
					//if(res==1) System.out.println("정상 추가 되었습니다..");
					//else System.out.println("이미 등록된 장비입니다..");
				}
				else if(category.equals("ST")){
					System.out.println("installType?"); installType = sc.next();
					Device newdev = new SmartTV(model, size, category, price, installType);
					try {
						newmgr.addDevice(newdev);
					} catch (DuplicatedIdException e) {
						System.out.println(e.getMessage());
					}
				//	if(res==1) System.out.println("정상 추가 되었습니다..");
				//	else System.out.println("이미 등록된 장비입니다..");
				}
			} else if(menu.equals("2")) {
				for (Device device : newmgr.getAllDevice()) {
					System.out.println(device.toString());
				}
			} else if(menu.equals("3")) {
				System.out.println("조회할 장비 모델명을 입력하세요..");
				model = sc.next();
				ret = newmgr.getDevice(model);
				if(ret == null) System.out.println("해당 모델 없습니다..");
				else System.out.println(ret.toString());
				
			} else if(menu.equals("4")) {
				System.out.println("삭제할 장비 모델명을 입력하세요..");
				model = sc.next();
				try {
					 newmgr.deleteDevice(model);
				} catch (ModelNotFoundException e) {
					System.out.println(e.getMessage());
				}
				//if(res==1) System.out.println("삭제되었습니다");	
				//else if (res == 3) System.out.println("해당 모델 없습니다..");
				
			} else if(menu.equals("Q")||menu.equals("q")) {
				System.out.println("프로그램 종료됩니다...");
				break;
			} else {
				System.out.println("잘못입력하셨습니다");
				continue;
			}
		}
	}

}
