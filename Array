<Enginner.java>

package edu.scsa.day2;

public class Engineer {
	//변수 선언
	private String name;
	private String position;
	private String dept;
	private int salary;
	private double grade;
	
	//생성자
	public Engineer() {}
	public Engineer(String name, String position, String dept, int salary, double grade)
	{
		this.name = name;
		this.position = position;
		this.dept = dept;
		this.salary = salary;
		this.grade = grade;
	}
	//메소드
	public void showInfo()
	{
		System.out.println("name :"+name+", position :"+position+", dept :"+dept+", salary :"+salary+", grade :"+grade);
		
	}
	public String toString()
	{
		return "이름 :"+this.name+", 직급 :"+position+", 평점 :"+this.grade;
	}
	
	//setter, getter 구현
	public String getPosition()
	{
		return this.position;
	}
	public void setPosition(String position)
	{
		this.position = position;
	}
	public String getDept()
	{
		return this.dept;
	}
	public void setDept(String dept)
	{
		this.dept = dept;
	}
	public String getName() 
	{
		return this.name;
	}
	public void setName(String name)
	{
		//유효성 검증....
		if(name!=null && name.length()!=0)
		{
			this.name = name;
		}else 
		{
			System.out.println("잘못된 값이 입력되었습니다.");
		}
		
	}
	public int getSalary()
	{
		return this.salary;
	}
	public void setSalary(int salary)
	{
		this.salary = salary;
	}
	public double getGrade()
	{
		return this.grade;
	}
	public void setGrade(double grade)
	{
		this.grade = grade;
	}
	
}

===========================================================
<EngineerTest.java>
package edu.scsa.day2;
/*
 *         "홍길동", "대리", "총무팀", 3000000, 8.99
            "손흥민", "과장", "회계팀", 300000, 9.99
            "유재석", "차장", "마케팅팀", 1300000, 8.99
 */
public class EngineerTest {

	public static void main(String[] args) {
		
		//정보를 배열에 저장하고
		EngManager ma = new EngManager();
		Engineer eng1 =  new Engineer("홍길동", "대리", "총무팀", 3000000, 8.99);
		Engineer eng2 = new Engineer("손흥민", "과장", "회계팀", 300000, 9.99);
		Engineer eng3 =  new Engineer("유재석", "차장", "마케팅팀", 1300000, 8.99);
		ma.addEngineer(eng1);
		ma.addEngineer(eng2);
		ma.addEngineer(eng3);
		System.out.println(ma.toString());
		//전체 정보를 출력해 보세요
		ma.showAllEngineer();
	}

}

============================================================
<engManager.java>
package edu.scsa.day2;
/*
 * 1. 배열에 Engineer 정보를 관리하는 클래스
 * 	가. 배열 생성 : 3개 (type: Engineer 배열)
 * 	나. 구현할 기능
 * 		- addEnginner(Enginner eng) : 리턴타입 void
 * 		  : 생성된 배열에 해당 정보를 저장
 * 		- showAllEngineer(): 배열에 저장된 전체 엔지니어의 정보 출력 : 리턴 타입 X
 * 
 */
public class EngManager {
	//변수 선언
	private Engineer[] en;
	private int index = 0;
	//생성자
	public EngManager()
	{
		this.en = new Engineer[3]; 
	}
	
	//함수
	public void addEngineer(Engineer eng)
	{
		if(index<en.length)
		{
			System.out.println("현재 인덱스는 "+index);
			en[index++] = eng;
		}
		else
		{
			System.out.println("저장 공간이 없습니다.");
		}
		
	}
	public void showAllEngineer()
	{
		for(int i=0; i<en.length; i++)
		{
			if(en[i]!=null)
			{
				en[i].showInfo();
			}
		}
	}
}


======================================================================
<testArray.java>

package edu.scsa.day2;

public class testArray {

	public static void main(String[] args) {

		// 정수의 배열 생성, 데이터 입력, 조회...
		int[] arr = new int[5];

		for (int i = 0; i < arr.length; i++) {
			System.out.println(arr[i]);
		}
		int[] arr1 = { 1, 2, 3, 4, 5 }; // 선언, 생성, 값할당 동시에
		int[][] arr2D = { { 1, 2 }, { 3, 4 } };

		// --------------객체형태의 배열 생성
		Engineer[] engArr = new Engineer[3];
		engArr[0] = new Engineer("홍길동", "대리", "총무팀", 3000000, 8.99);
		engArr[1] = new Engineer("박지성", "과장", "회계팀", 250000, 9.00);

		// 입력된 Enginner의 showInfo 함수를 이용하여 배열에 저장된 정보를 출력하세요..:for문 이용
		for (int i = 0; i < engArr.length; i++) {
			if (engArr[i] != null) {
				engArr[i].showInfo();
			}
		}

		arrayCopy();
	}

	public static void arrayCopy() {
		String[] strArr = { "떡볶이", "추어탕", "피자", "삼겹살" };
		String[] newArr = new String[8];
		System.arraycopy(strArr, 0, newArr, 0, strArr.length); //

		for (int i = 0; i < newArr.length; i++) {
			System.out.println(newArr[i]);
		}
	}

}


